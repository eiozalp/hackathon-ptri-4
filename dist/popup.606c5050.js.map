{"mappings":"kBACMA,EAAQC,SAASC,cAAa,QACpCD,SAASE,iBAAgB,oBAAmB,KAC1CC,OAAOC,QAAQC,KAAKC,IAAG,iBAAcC,eA4C1BC,EAAaC,OAEhBC,EAAUD,EAAK,IAEfE,EAAQC,SAAUF,EAAU,MAChCA,GAAoB,SAEhBG,EAAUD,SAAUF,EAAU,QAE9BI,SACJJ,GAAoB,GAElBI,EADW,IAAVH,EACuB,IAAZE,EAAa,GAAQH,EAAQK,aAAW,GAAOF,EAAQE,UAAO,SAAYL,EAAQK,cAEnF,GAAMJ,EAAMI,UAAO,QAAWF,EAAQE,UAAO,QAAWL,EAAQK,aACtED,EA1DTX,OAAOC,QAAQC,KAAKC,IAAIC,GAAOS,UACvBC,EAAK,WAEFC,KAAOF,EAAY,OAEpBG,EAAMH,EAAaE,GAAKE,QAAM,CAAEC,EAAIC,KAGxCC,QAAQC,IAAG,yCAA2CF,EAAKG,QAAUH,EAAKI,UACnEL,GAAOC,EAAKI,WAAQ,IAASC,MAAQC,UAAYN,EAAKO,SAC5D,GACHZ,EAAMC,GAAOC,QAITW,EAASC,OAAOxB,KAAKU,GAAOe,MAAI,CAAEC,EAAGC,IAAMjB,EAAMiB,GAAKjB,EAAMgB,KAElE9B,OAAOC,QAAQC,KAAKC,IAAG,yBAAkB6B,UAEnCC,EAAS,WACJC,EAAI,EAAGA,GAAKP,EAAOQ,OAAS,EAAIR,EAAOQ,OAAS,GAAID,IAAC,OACtDE,EAAI,CACRd,IAAKK,EAAOO,GACZX,SAAUlB,EAAYS,EAAMa,EAAOO,MAarCD,GAVqB,yLAGkBD,EAASL,EAAOO,kDACvBE,EAAKd,wEAERc,EAAKb,iDAMpC3B,EAAMyC,UAAYJ","sources":["popup.js"],"sourcesContent":["// Initialize button with user's preferred color\nconst popup = document.querySelector('#app')\ndocument.addEventListener('DOMContentLoaded', () => {\n  chrome.storage.sync.get(['keys'], ({ keys }) => {\n    chrome.storage.sync.get(keys, (sessionLists) => {\n      const total = {};\n      //key : [{duration: },{}]\n      for (let key in sessionLists) {\n        // key => 'google.com'\n        const sum = sessionLists[key].reduce((acc,curr) => {\n          // { duration: 1234, start: 12341234, end: 12341234, url: 'google.com' }\n          //check if the duration is null \n          console.log(`Current duration of final session for ${ curr.url }: `, curr.duration)\n          return acc + (curr.duration ?? (new Date()).getTime() - curr.start); \n        }, 0)\n        total[key] = sum\n      }\n\n      // TODO: Improve efficiency as stretch goal -> may be inefficient as is\n      const sorted = Object.keys(total).sort((a, b) => total[b] - total[a])\n\n      chrome.storage.sync.get(['favicons'], ({ favicons }) => {\n        // create dom elements and mount them to the popup div (#app)\n        let popupHTML = ''\n        for (let i = 0; i < (sorted.length < 5 ? sorted.length : 5); i++) {\n          const data = {\n            url: sorted[i],\n            duration: convertTime(total[sorted[i]])\n          }\n\n          const el = /* html */`\n            <div class=\"site--block\">\n              <div style=\"display: flex; align-items: center; justify-content: flex-start;\">\n                <img style=\"width: 30px;\" src=\"${favicons[sorted[i]]}\">\n                <h2 class=\"site--title\">${data.url}</h2>\n              </div>\n              <sub class=\"site--sub\">${data.duration}</sub>\n            </div>\n          `\n\n          popupHTML += el\n        }\n        popup.innerHTML = popupHTML\n\n      })\n    })\n\n    function convertTime( ms ) {\n      // 1- Convert to seconds:\n      var seconds = ms / 1000;\n      // 2- Extract hours:\n      var hours = parseInt( seconds / 3600 ); // 3,600 seconds in 1 hour\n      seconds = seconds % 3600; // seconds remaining after extracting hours\n      // 3- Extract minutes:\n      var minutes = parseInt( seconds / 60 ); // 60 seconds in 1 minute\n      // 4- Keep only seconds not extracted to minutes:\n      let returned ; \n      seconds = seconds % 60;\n      if(hours === 0) {\n        returned = (minutes === 0) ?  `${seconds.toFixed()}s` : `${minutes.toFixed()+\":\"} m ${seconds.toFixed()} s`;\n      } \n      else returned = `${hours.toFixed()+\":\"}h ${minutes.toFixed()+\":\"}m ${seconds.toFixed()}s`;\n      return returned;\n  }\n  })\n})\n"],"names":["$5edd7df02f7ee47a175af26207f181a3$var$popup","document","querySelector","addEventListener","chrome","storage","sync","get","keys","convertTime","ms","seconds","hours","parseInt","minutes","returned","toFixed","sessionLists","total","key","sum","reduce","acc","curr","console","log","url","duration","Date","getTime","start","sorted","Object","sort","a","b","favicons","popupHTML","i","length","data","innerHTML"],"version":3,"file":"popup.606c5050.js.map"}